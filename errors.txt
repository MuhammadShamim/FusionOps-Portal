Application bundle generation failed. [2.166 seconds]

✘ [ERROR] NG2003: No suitable injection token for parameter 'authService' of class 'CarrierProfileComponent'.
  Consider using the @Inject decorator to specify an injection token. [plugin angular-compiler]

    src/app/private/carrier-profile.component.ts:32:11:
      32 │     public authService: import('../services/auth.service').AuthSer...
         ╵            ~~~~~~~~~~~

  This type is not supported as injection token.

    src/app/private/carrier-profile.component.ts:32:24:
      32 │ ...public authService: import('../services/auth.service').AuthService
         ╵                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


✘ [ERROR] NG2003: No suitable injection token for parameter 'authService' of class 'DashboardComponent'.
  Consider using the @Inject decorator to specify an injection token. [plugin angular-compiler]

    src/app/private/dashboard.component.ts:27:11:
      27 │     public authService: import('../services/auth.service').AuthSer...
         ╵            ~~~~~~~~~~~

  This type is not supported as injection token.

    src/app/private/dashboard.component.ts:27:24:
      27 │ ...public authService: import('../services/auth.service').AuthService
         ╵                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


✘ [ERROR] NG2003: No suitable injection token for parameter 'authService' of class 'KanbanComponent'.
  Consider using the @Inject decorator to specify an injection token. [plugin angular-compiler]

    src/app/private/kanban.component.ts:29:21:
      29 │   constructor(public authService: import('../services/auth.service...
         ╵                      ~~~~~~~~~~~

  This type is not supported as injection token.

    src/app/private/kanban.component.ts:29:34:
      29 │ ...lic authService: import('../services/auth.service').AuthService) {
         ╵                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


✘ [ERROR] NG2003: No suitable injection token for parameter 'authService' of class 'NotesComponent'.
  Consider using the @Inject decorator to specify an injection token. [plugin angular-compiler]

    src/app/private/notes.component.ts:163:21:
      163 │   constructor(public authService: import('../services/auth.servic...
          ╵                      ~~~~~~~~~~~

  This type is not supported as injection token.

    src/app/private/notes.component.ts:163:34:
      163 │ ...ic authService: import('../services/auth.service').AuthService) {
          ╵                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


✘ [ERROR] NG2003: No suitable injection token for parameter 'authService' of class 'PagerDutyEventsComponent'.
  Consider using the @Inject decorator to specify an injection token. [plugin angular-compiler]

    src/app/private/pagerduty-events.component.ts:40:9:
      40 │   public authService: import('../services/auth.service').AuthService
         ╵          ~~~~~~~~~~~

  This type is not supported as injection token.

    src/app/private/pagerduty-events.component.ts:40:22:
      40 │   public authService: import('../services/auth.service').AuthService
         ╵                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


✘ [ERROR] NG2003: No suitable injection token for parameter 'authService' of class 'SettingsComponent'.
  Consider using the @Inject decorator to specify an injection token. [plugin angular-compiler]

    src/app/private/settings.component.ts:16:21:
      16 │   constructor(public authService: import('../services/auth.service...
         ╵                      ~~~~~~~~~~~

  This type is not supported as injection token.

    src/app/private/settings.component.ts:16:34:
      16 │ ...lic authService: import('../services/auth.service').AuthService) {
         ╵                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


✘ [ERROR] TS1434: Unexpected keyword or identifier. [plugin angular-compiler]

    src/app/services/auth.service.ts:1:2:
      1 │   get isAuthenticated(): boolean {
        ╵   ~~~


✘ [ERROR] TS2304: Cannot find name 'get'. [plugin angular-compiler]

    src/app/services/auth.service.ts:1:2:
      1 │   get isAuthenticated(): boolean {
        ╵   ~~~


✘ [ERROR] TS2304: Cannot find name 'isAuthenticated'. [plugin angular-compiler]

    src/app/services/auth.service.ts:1:6:
      1 │   get isAuthenticated(): boolean {
        ╵       ~~~~~~~~~~~~~~~


✘ [ERROR] TS1005: ';' expected. [plugin angular-compiler]

    src/app/services/auth.service.ts:1:23:
      1 │   get isAuthenticated(): boolean {
        ╵                        ^


✘ [ERROR] TS1434: Unexpected keyword or identifier. [plugin angular-compiler]

    src/app/services/auth.service.ts:1:25:
      1 │   get isAuthenticated(): boolean {
        ╵                          ~~~~~~~


✘ [ERROR] TS2693: 'boolean' only refers to a type, but is being used as a value here. [plugin angular-compiler]

    src/app/services/auth.service.ts:1:25:
      1 │   get isAuthenticated(): boolean {
        ╵                          ~~~~~~~


✘ [ERROR] Top-level return cannot be used inside an ECMAScript module

    src/app/services/auth.service.ts:8:4:
      8 │     return this.authSubject.value;
        ╵     ~~~~~~

  This file is considered to be an ECMAScript module because of the "export" keyword here:

    src/app/services/auth.service.ts:10:0:
      10 │ export class AuthService {